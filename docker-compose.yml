version: '3.4'

services:
  kpfu-db-postgres:
    image: postgres:13
    container_name: kpfu-db-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    command: postgres -c 'config_file=/etc/postgresql/postgresql.conf'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 30s
      timeout: 20s
      retries: 5
    volumes:
      - ./db-postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - kpfu-postgresql-data:/var/lib/postgresql/data
      - ./db-postgres/postgresql.conf:/etc/postgresql/postgresql.conf
    ports:
      - ${POSTGRES_PORT}:5432
    networks:
      - net

  kpfu-db-redis:
    container_name: kpfu-db-redis
    image: "redis:latest"
    ports:
      - "6379:6379"
    volumes:
      - ./db-redis/redis-data:/var/lib/redis
      - ./db-redis/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      - net

  ds-main-service:
    image: ${DOCKER_REGISTRY}/ds-main-service:${DOCKER_TAG}
    container_name: ds-main-service
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - kpfu-db-postgres
      - kpfu-db-redis
    ports:
      - ${MAIN_SERVICE_PORT}:${MAIN_SERVICE_PORT}
    networks:
      - net

volumes:
  kpfu-postgresql-data:

networks:
  net:
    name: network
  default:
    driver: bridge
    attachable: true
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16